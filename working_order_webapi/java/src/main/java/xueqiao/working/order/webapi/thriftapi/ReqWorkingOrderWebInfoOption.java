/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.working.order.webapi.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ReqWorkingOrderWebInfoOption implements org.apache.thrift.TBase<ReqWorkingOrderWebInfoOption, ReqWorkingOrderWebInfoOption._Fields>, java.io.Serializable, Cloneable, Comparable<ReqWorkingOrderWebInfoOption> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReqWorkingOrderWebInfoOption");

  private static final org.apache.thrift.protocol.TField COMPANY_NAME_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("companyNamePartical", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_USER_NAME_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("companyUserNamePartical", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ORDER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderType", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("state", org.apache.thrift.protocol.TType.I32, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ReqWorkingOrderWebInfoOptionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ReqWorkingOrderWebInfoOptionTupleSchemeFactory());
  }

  public String companyNamePartical; // optional
  public String companyUserNamePartical; // optional
  /**
   * 
   * @see xueqiao.working.order.thriftapi.WorkingOrderType
   */
  public xueqiao.working.order.thriftapi.WorkingOrderType orderType; // optional
  /**
   * 
   * @see xueqiao.working.order.thriftapi.WorkingOrderState
   */
  public xueqiao.working.order.thriftapi.WorkingOrderState state; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    COMPANY_NAME_PARTICAL((short)1, "companyNamePartical"),
    COMPANY_USER_NAME_PARTICAL((short)2, "companyUserNamePartical"),
    /**
     * 
     * @see xueqiao.working.order.thriftapi.WorkingOrderType
     */
    ORDER_TYPE((short)3, "orderType"),
    /**
     * 
     * @see xueqiao.working.order.thriftapi.WorkingOrderState
     */
    STATE((short)4, "state");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMPANY_NAME_PARTICAL
          return COMPANY_NAME_PARTICAL;
        case 2: // COMPANY_USER_NAME_PARTICAL
          return COMPANY_USER_NAME_PARTICAL;
        case 3: // ORDER_TYPE
          return ORDER_TYPE;
        case 4: // STATE
          return STATE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.COMPANY_NAME_PARTICAL,_Fields.COMPANY_USER_NAME_PARTICAL,_Fields.ORDER_TYPE,_Fields.STATE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMPANY_NAME_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("companyNamePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_USER_NAME_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("companyUserNamePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("orderType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, xueqiao.working.order.thriftapi.WorkingOrderType.class)));
    tmpMap.put(_Fields.STATE, new org.apache.thrift.meta_data.FieldMetaData("state", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, xueqiao.working.order.thriftapi.WorkingOrderState.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReqWorkingOrderWebInfoOption.class, metaDataMap);
  }

  public ReqWorkingOrderWebInfoOption() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReqWorkingOrderWebInfoOption(ReqWorkingOrderWebInfoOption other) {
    if (other.isSetCompanyNamePartical()) {
      this.companyNamePartical = other.companyNamePartical;
    }
    if (other.isSetCompanyUserNamePartical()) {
      this.companyUserNamePartical = other.companyUserNamePartical;
    }
    if (other.isSetOrderType()) {
      this.orderType = other.orderType;
    }
    if (other.isSetState()) {
      this.state = other.state;
    }
  }

  public ReqWorkingOrderWebInfoOption deepCopy() {
    return new ReqWorkingOrderWebInfoOption(this);
  }

  @Override
  public void clear() {
    this.companyNamePartical = null;
    this.companyUserNamePartical = null;
    this.orderType = null;
    this.state = null;
  }

  public String getCompanyNamePartical() {
    return this.companyNamePartical;
  }

  public ReqWorkingOrderWebInfoOption setCompanyNamePartical(String companyNamePartical) {
    this.companyNamePartical = companyNamePartical;
    return this;
  }

  public void unsetCompanyNamePartical() {
    this.companyNamePartical = null;
  }

  /** Returns true if field companyNamePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyNamePartical() {
    return this.companyNamePartical != null;
  }

  public void setCompanyNameParticalIsSet(boolean value) {
    if (!value) {
      this.companyNamePartical = null;
    }
  }

  public String getCompanyUserNamePartical() {
    return this.companyUserNamePartical;
  }

  public ReqWorkingOrderWebInfoOption setCompanyUserNamePartical(String companyUserNamePartical) {
    this.companyUserNamePartical = companyUserNamePartical;
    return this;
  }

  public void unsetCompanyUserNamePartical() {
    this.companyUserNamePartical = null;
  }

  /** Returns true if field companyUserNamePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyUserNamePartical() {
    return this.companyUserNamePartical != null;
  }

  public void setCompanyUserNameParticalIsSet(boolean value) {
    if (!value) {
      this.companyUserNamePartical = null;
    }
  }

  /**
   * 
   * @see xueqiao.working.order.thriftapi.WorkingOrderType
   */
  public xueqiao.working.order.thriftapi.WorkingOrderType getOrderType() {
    return this.orderType;
  }

  /**
   * 
   * @see xueqiao.working.order.thriftapi.WorkingOrderType
   */
  public ReqWorkingOrderWebInfoOption setOrderType(xueqiao.working.order.thriftapi.WorkingOrderType orderType) {
    this.orderType = orderType;
    return this;
  }

  public void unsetOrderType() {
    this.orderType = null;
  }

  /** Returns true if field orderType is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderType() {
    return this.orderType != null;
  }

  public void setOrderTypeIsSet(boolean value) {
    if (!value) {
      this.orderType = null;
    }
  }

  /**
   * 
   * @see xueqiao.working.order.thriftapi.WorkingOrderState
   */
  public xueqiao.working.order.thriftapi.WorkingOrderState getState() {
    return this.state;
  }

  /**
   * 
   * @see xueqiao.working.order.thriftapi.WorkingOrderState
   */
  public ReqWorkingOrderWebInfoOption setState(xueqiao.working.order.thriftapi.WorkingOrderState state) {
    this.state = state;
    return this;
  }

  public void unsetState() {
    this.state = null;
  }

  /** Returns true if field state is set (has been assigned a value) and false otherwise */
  public boolean isSetState() {
    return this.state != null;
  }

  public void setStateIsSet(boolean value) {
    if (!value) {
      this.state = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case COMPANY_NAME_PARTICAL:
      if (value == null) {
        unsetCompanyNamePartical();
      } else {
        setCompanyNamePartical((String)value);
      }
      break;

    case COMPANY_USER_NAME_PARTICAL:
      if (value == null) {
        unsetCompanyUserNamePartical();
      } else {
        setCompanyUserNamePartical((String)value);
      }
      break;

    case ORDER_TYPE:
      if (value == null) {
        unsetOrderType();
      } else {
        setOrderType((xueqiao.working.order.thriftapi.WorkingOrderType)value);
      }
      break;

    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((xueqiao.working.order.thriftapi.WorkingOrderState)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case COMPANY_NAME_PARTICAL:
      return getCompanyNamePartical();

    case COMPANY_USER_NAME_PARTICAL:
      return getCompanyUserNamePartical();

    case ORDER_TYPE:
      return getOrderType();

    case STATE:
      return getState();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case COMPANY_NAME_PARTICAL:
      return isSetCompanyNamePartical();
    case COMPANY_USER_NAME_PARTICAL:
      return isSetCompanyUserNamePartical();
    case ORDER_TYPE:
      return isSetOrderType();
    case STATE:
      return isSetState();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ReqWorkingOrderWebInfoOption)
      return this.equals((ReqWorkingOrderWebInfoOption)that);
    return false;
  }

  public boolean equals(ReqWorkingOrderWebInfoOption that) {
    if (that == null)
      return false;

    boolean this_present_companyNamePartical = true && this.isSetCompanyNamePartical();
    boolean that_present_companyNamePartical = true && that.isSetCompanyNamePartical();
    if (this_present_companyNamePartical || that_present_companyNamePartical) {
      if (!(this_present_companyNamePartical && that_present_companyNamePartical))
        return false;
      if (!this.companyNamePartical.equals(that.companyNamePartical))
        return false;
    }

    boolean this_present_companyUserNamePartical = true && this.isSetCompanyUserNamePartical();
    boolean that_present_companyUserNamePartical = true && that.isSetCompanyUserNamePartical();
    if (this_present_companyUserNamePartical || that_present_companyUserNamePartical) {
      if (!(this_present_companyUserNamePartical && that_present_companyUserNamePartical))
        return false;
      if (!this.companyUserNamePartical.equals(that.companyUserNamePartical))
        return false;
    }

    boolean this_present_orderType = true && this.isSetOrderType();
    boolean that_present_orderType = true && that.isSetOrderType();
    if (this_present_orderType || that_present_orderType) {
      if (!(this_present_orderType && that_present_orderType))
        return false;
      if (!this.orderType.equals(that.orderType))
        return false;
    }

    boolean this_present_state = true && this.isSetState();
    boolean that_present_state = true && that.isSetState();
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (!this.state.equals(that.state))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ReqWorkingOrderWebInfoOption other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCompanyNamePartical()).compareTo(other.isSetCompanyNamePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyNamePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyNamePartical, other.companyNamePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyUserNamePartical()).compareTo(other.isSetCompanyUserNamePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyUserNamePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyUserNamePartical, other.companyUserNamePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderType()).compareTo(other.isSetOrderType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderType, other.orderType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetState()).compareTo(other.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.state, other.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ReqWorkingOrderWebInfoOption(");
    boolean first = true;

    if (isSetCompanyNamePartical()) {
      sb.append("companyNamePartical:");
      if (this.companyNamePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.companyNamePartical);
      }
      first = false;
    }
    if (isSetCompanyUserNamePartical()) {
      if (!first) sb.append(", ");
      sb.append("companyUserNamePartical:");
      if (this.companyUserNamePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.companyUserNamePartical);
      }
      first = false;
    }
    if (isSetOrderType()) {
      if (!first) sb.append(", ");
      sb.append("orderType:");
      if (this.orderType == null) {
        sb.append("null");
      } else {
        sb.append(this.orderType);
      }
      first = false;
    }
    if (isSetState()) {
      if (!first) sb.append(", ");
      sb.append("state:");
      if (this.state == null) {
        sb.append("null");
      } else {
        sb.append(this.state);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReqWorkingOrderWebInfoOptionStandardSchemeFactory implements SchemeFactory {
    public ReqWorkingOrderWebInfoOptionStandardScheme getScheme() {
      return new ReqWorkingOrderWebInfoOptionStandardScheme();
    }
  }

  private static class ReqWorkingOrderWebInfoOptionStandardScheme extends StandardScheme<ReqWorkingOrderWebInfoOption> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReqWorkingOrderWebInfoOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMPANY_NAME_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyNamePartical = iprot.readString();
              struct.setCompanyNameParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_USER_NAME_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyUserNamePartical = iprot.readString();
              struct.setCompanyUserNameParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORDER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderType = xueqiao.working.order.thriftapi.WorkingOrderType.findByValue(iprot.readI32());
              struct.setOrderTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.state = xueqiao.working.order.thriftapi.WorkingOrderState.findByValue(iprot.readI32());
              struct.setStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReqWorkingOrderWebInfoOption struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.companyNamePartical != null) {
        if (struct.isSetCompanyNamePartical()) {
          oprot.writeFieldBegin(COMPANY_NAME_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.companyNamePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyUserNamePartical != null) {
        if (struct.isSetCompanyUserNamePartical()) {
          oprot.writeFieldBegin(COMPANY_USER_NAME_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.companyUserNamePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orderType != null) {
        if (struct.isSetOrderType()) {
          oprot.writeFieldBegin(ORDER_TYPE_FIELD_DESC);
          oprot.writeI32(struct.orderType.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.state != null) {
        if (struct.isSetState()) {
          oprot.writeFieldBegin(STATE_FIELD_DESC);
          oprot.writeI32(struct.state.getValue());
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReqWorkingOrderWebInfoOptionTupleSchemeFactory implements SchemeFactory {
    public ReqWorkingOrderWebInfoOptionTupleScheme getScheme() {
      return new ReqWorkingOrderWebInfoOptionTupleScheme();
    }
  }

  private static class ReqWorkingOrderWebInfoOptionTupleScheme extends TupleScheme<ReqWorkingOrderWebInfoOption> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReqWorkingOrderWebInfoOption struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCompanyNamePartical()) {
        optionals.set(0);
      }
      if (struct.isSetCompanyUserNamePartical()) {
        optionals.set(1);
      }
      if (struct.isSetOrderType()) {
        optionals.set(2);
      }
      if (struct.isSetState()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetCompanyNamePartical()) {
        oprot.writeString(struct.companyNamePartical);
      }
      if (struct.isSetCompanyUserNamePartical()) {
        oprot.writeString(struct.companyUserNamePartical);
      }
      if (struct.isSetOrderType()) {
        oprot.writeI32(struct.orderType.getValue());
      }
      if (struct.isSetState()) {
        oprot.writeI32(struct.state.getValue());
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReqWorkingOrderWebInfoOption struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.companyNamePartical = iprot.readString();
        struct.setCompanyNameParticalIsSet(true);
      }
      if (incoming.get(1)) {
        struct.companyUserNamePartical = iprot.readString();
        struct.setCompanyUserNameParticalIsSet(true);
      }
      if (incoming.get(2)) {
        struct.orderType = xueqiao.working.order.thriftapi.WorkingOrderType.findByValue(iprot.readI32());
        struct.setOrderTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.state = xueqiao.working.order.thriftapi.WorkingOrderState.findByValue(iprot.readI32());
        struct.setStateIsSet(true);
      }
    }
  }

}

