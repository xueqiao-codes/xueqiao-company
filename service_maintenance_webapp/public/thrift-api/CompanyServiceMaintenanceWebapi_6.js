//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_args = function(args) {
  this.platformArgs = null;
  this.filter = null;
  this.pageOption = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.filter !== undefined) {
      this.filter = args.filter;
    }
    if (args.pageOption !== undefined) {
      this.pageOption = args.pageOption;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_args.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.filter = new CompanyServiceMaintenanceFilter();
        this.filter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pageOption = new IndexedPageOption();
        this.pageOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.filter !== null && this.filter !== undefined) {
    output.writeFieldBegin('filter', Thrift.Type.STRUCT, 2);
    this.filter.write(output);
    output.writeFieldEnd();
  }
  if (this.pageOption !== null && this.pageOption !== undefined) {
    output.writeFieldBegin('pageOption', Thrift.Type.STRUCT, 3);
    this.pageOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_result.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CompanyServiceMaintenancePage();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_addUpgradeSchedule_args = function(args) {
  this.platformArgs = null;
  this.upgradeSchedule = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.upgradeSchedule !== undefined) {
      this.upgradeSchedule = args.upgradeSchedule;
    }
  }
};
CompanyServiceMaintenanceWebapi_addUpgradeSchedule_args.prototype = {};
CompanyServiceMaintenanceWebapi_addUpgradeSchedule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.upgradeSchedule = new NewUpgradeSchedule();
        this.upgradeSchedule.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_addUpgradeSchedule_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_addUpgradeSchedule_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.upgradeSchedule !== null && this.upgradeSchedule !== undefined) {
    output.writeFieldBegin('upgradeSchedule', Thrift.Type.STRUCT, 2);
    this.upgradeSchedule.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_addUpgradeSchedule_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_addUpgradeSchedule_result.prototype = {};
CompanyServiceMaintenanceWebapi_addUpgradeSchedule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_addUpgradeSchedule_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_addUpgradeSchedule_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_addRollbackSchedule_args = function(args) {
  this.platformArgs = null;
  this.rollbackSchedule = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.rollbackSchedule !== undefined) {
      this.rollbackSchedule = args.rollbackSchedule;
    }
  }
};
CompanyServiceMaintenanceWebapi_addRollbackSchedule_args.prototype = {};
CompanyServiceMaintenanceWebapi_addRollbackSchedule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.rollbackSchedule = new NewRollbackSchedule();
        this.rollbackSchedule.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_addRollbackSchedule_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_addRollbackSchedule_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.rollbackSchedule !== null && this.rollbackSchedule !== undefined) {
    output.writeFieldBegin('rollbackSchedule', Thrift.Type.STRUCT, 2);
    this.rollbackSchedule.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_addRollbackSchedule_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_addRollbackSchedule_result.prototype = {};
CompanyServiceMaintenanceWebapi_addRollbackSchedule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_addRollbackSchedule_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_addRollbackSchedule_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_args = function(args) {
  this.platformArgs = null;
  this.filter = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.filter !== undefined) {
      this.filter = args.filter;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_args.prototype = {};
CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.filter = new ReqMaintenanceScheduleDetailFilter();
        this.filter.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.filter !== null && this.filter !== undefined) {
    output.writeFieldBegin('filter', Thrift.Type.STRUCT, 2);
    this.filter.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_result.prototype = {};
CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size104 = 0;
        var _rtmp3108;
        this.success = [];
        var _etype107 = 0;
        _rtmp3108 = input.readListBegin();
        _etype107 = _rtmp3108.etype;
        _size104 = _rtmp3108.size;
        for (var _i109 = 0; _i109 < _size104; ++_i109)
        {
          var elem110 = null;
          elem110 = new MaintenanceScheduleDetail();
          elem110.read(input);
          this.success.push(elem110);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter111 in this.success)
    {
      if (this.success.hasOwnProperty(iter111))
      {
        iter111 = this.success[iter111];
        iter111.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_args = function(args) {
  this.platformArgs = null;
  this.companyIds = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.companyIds !== undefined) {
      this.companyIds = args.companyIds;
    }
  }
};
CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_args.prototype = {};
CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.SET) {
        var _size112 = 0;
        var _rtmp3116;
        this.companyIds = [];
        var _etype115 = 0;
        _rtmp3116 = input.readSetBegin();
        _etype115 = _rtmp3116.etype;
        _size112 = _rtmp3116.size;
        for (var _i117 = 0; _i117 < _size112; ++_i117)
        {
          var elem118 = null;
          elem118 = input.readI64().value;
          this.companyIds.push(elem118);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.companyIds !== null && this.companyIds !== undefined) {
    output.writeFieldBegin('companyIds', Thrift.Type.SET, 2);
    output.writeSetBegin(Thrift.Type.I64, this.companyIds.length);
    for (var iter119 in this.companyIds)
    {
      if (this.companyIds.hasOwnProperty(iter119))
      {
        iter119 = this.companyIds[iter119];
        output.writeI64(iter119);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_result.prototype = {};
CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_args = function(args) {
  this.platformArgs = null;
  this.companyId = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.companyId !== undefined) {
      this.companyId = args.companyId;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_args.prototype = {};
CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.companyId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I64, 2);
    output.writeI64(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_result.prototype = {};
CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size120 = 0;
        var _rtmp3124;
        this.success = [];
        var _etype123 = 0;
        _rtmp3124 = input.readListBegin();
        _etype123 = _rtmp3124.etype;
        _size120 = _rtmp3124.size;
        for (var _i125 = 0; _i125 < _size120; ++_i125)
        {
          var elem126 = null;
          elem126 = new MaintenanceHistory();
          elem126.read(input);
          this.success.push(elem126);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter127 in this.success)
    {
      if (this.success.hasOwnProperty(iter127))
      {
        iter127 = this.success[iter127];
        iter127.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_args = function(args) {
  this.platformArgs = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_args.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_result.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size128 = 0;
        var _rtmp3132;
        this.success = [];
        var _etype131 = 0;
        _rtmp3132 = input.readListBegin();
        _etype131 = _rtmp3132.etype;
        _size128 = _rtmp3132.size;
        for (var _i133 = 0; _i133 < _size128; ++_i133)
        {
          var elem134 = null;
          elem134 = new VersionInfo();
          elem134.read(input);
          this.success.push(elem134);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter135 in this.success)
    {
      if (this.success.hasOwnProperty(iter135))
      {
        iter135 = this.success[iter135];
        iter135.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_args = function(args) {
  this.platformArgs = null;
  this.companyId = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.companyId !== undefined) {
      this.companyId = args.companyId;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_args.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.companyId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I64, 2);
    output.writeI64(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_result.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size136 = 0;
        var _rtmp3140;
        this.success = [];
        var _etype139 = 0;
        _rtmp3140 = input.readListBegin();
        _etype139 = _rtmp3140.etype;
        _size136 = _rtmp3140.size;
        for (var _i141 = 0; _i141 < _size136; ++_i141)
        {
          var elem142 = null;
          elem142 = new CompanyGroupServiceDetail();
          elem142.read(input);
          this.success.push(elem142);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter143 in this.success)
    {
      if (this.success.hasOwnProperty(iter143))
      {
        iter143 = this.success[iter143];
        iter143.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_args = function(args) {
  this.platformArgs = null;
  this.companyIds = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.companyIds !== undefined) {
      this.companyIds = args.companyIds;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_args.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.SET) {
        var _size144 = 0;
        var _rtmp3148;
        this.companyIds = [];
        var _etype147 = 0;
        _rtmp3148 = input.readSetBegin();
        _etype147 = _rtmp3148.etype;
        _size144 = _rtmp3148.size;
        for (var _i149 = 0; _i149 < _size144; ++_i149)
        {
          var elem150 = null;
          elem150 = input.readI64().value;
          this.companyIds.push(elem150);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.companyIds !== null && this.companyIds !== undefined) {
    output.writeFieldBegin('companyIds', Thrift.Type.SET, 2);
    output.writeSetBegin(Thrift.Type.I64, this.companyIds.length);
    for (var iter151 in this.companyIds)
    {
      if (this.companyIds.hasOwnProperty(iter151))
      {
        iter151 = this.companyIds[iter151];
        output.writeI64(iter151);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_result.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size152 = 0;
        var _rtmp3156;
        this.success = [];
        var _etype155 = 0;
        _rtmp3156 = input.readListBegin();
        _etype155 = _rtmp3156.etype;
        _size152 = _rtmp3156.size;
        for (var _i157 = 0; _i157 < _size152; ++_i157)
        {
          var elem158 = null;
          elem158 = new VersionInfo();
          elem158.read(input);
          this.success.push(elem158);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter159 in this.success)
    {
      if (this.success.hasOwnProperty(iter159))
      {
        iter159 = this.success[iter159];
        iter159.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_args = function(args) {
  this.platformArgs = null;
  this.companyId = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.companyId !== undefined) {
      this.companyId = args.companyId;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_args.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.companyId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I64, 2);
    output.writeI64(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_result.prototype = {};
CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size160 = 0;
        var _rtmp3164;
        this.success = [];
        var _etype163 = 0;
        _rtmp3164 = input.readListBegin();
        _etype163 = _rtmp3164.etype;
        _size160 = _rtmp3164.size;
        for (var _i165 = 0; _i165 < _size160; ++_i165)
        {
          var elem166 = null;
          elem166 = new VersionInfo();
          elem166.read(input);
          this.success.push(elem166);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter167 in this.success)
    {
      if (this.success.hasOwnProperty(iter167))
      {
        iter167 = this.success[iter167];
        iter167.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_initCompanyVersion_args = function(args) {
  this.platformArgs = null;
  this.companyId = null;
  this.versionId = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.companyId !== undefined) {
      this.companyId = args.companyId;
    }
    if (args.versionId !== undefined) {
      this.versionId = args.versionId;
    }
  }
};
CompanyServiceMaintenanceWebapi_initCompanyVersion_args.prototype = {};
CompanyServiceMaintenanceWebapi_initCompanyVersion_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.companyId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.versionId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_initCompanyVersion_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_initCompanyVersion_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I64, 2);
    output.writeI64(this.companyId);
    output.writeFieldEnd();
  }
  if (this.versionId !== null && this.versionId !== undefined) {
    output.writeFieldBegin('versionId', Thrift.Type.I64, 3);
    output.writeI64(this.versionId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_initCompanyVersion_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_initCompanyVersion_result.prototype = {};
CompanyServiceMaintenanceWebapi_initCompanyVersion_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_initCompanyVersion_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_initCompanyVersion_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqServerVersions_args = function(args) {
  this.platformArgs = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqServerVersions_args.prototype = {};
CompanyServiceMaintenanceWebapi_reqServerVersions_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqServerVersions_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqServerVersions_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqServerVersions_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_reqServerVersions_result.prototype = {};
CompanyServiceMaintenanceWebapi_reqServerVersions_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size168 = 0;
        var _rtmp3172;
        this.success = [];
        var _etype171 = 0;
        _rtmp3172 = input.readListBegin();
        _etype171 = _rtmp3172.etype;
        _size168 = _rtmp3172.size;
        for (var _i173 = 0; _i173 < _size168; ++_i173)
        {
          var elem174 = null;
          elem174 = new VersionInfo();
          elem174.read(input);
          this.success.push(elem174);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_reqServerVersions_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_reqServerVersions_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter175 in this.success)
    {
      if (this.success.hasOwnProperty(iter175))
      {
        iter175 = this.success[iter175];
        iter175.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_updateKeepLatestTag_args = function(args) {
  this.platformArgs = null;
  this.companyId = null;
  this.keepLatest = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.companyId !== undefined) {
      this.companyId = args.companyId;
    }
    if (args.keepLatest !== undefined) {
      this.keepLatest = args.keepLatest;
    }
  }
};
CompanyServiceMaintenanceWebapi_updateKeepLatestTag_args.prototype = {};
CompanyServiceMaintenanceWebapi_updateKeepLatestTag_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.companyId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.keepLatest = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_updateKeepLatestTag_args.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_updateKeepLatestTag_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I64, 2);
    output.writeI64(this.companyId);
    output.writeFieldEnd();
  }
  if (this.keepLatest !== null && this.keepLatest !== undefined) {
    output.writeFieldBegin('keepLatest', Thrift.Type.BOOL, 3);
    output.writeBool(this.keepLatest);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_updateKeepLatestTag_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
CompanyServiceMaintenanceWebapi_updateKeepLatestTag_result.prototype = {};
CompanyServiceMaintenanceWebapi_updateKeepLatestTag_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CompanyServiceMaintenanceWebapi_updateKeepLatestTag_result.prototype.write = function(output) {
  output.writeStructBegin('CompanyServiceMaintenanceWebapi_updateKeepLatestTag_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

CompanyServiceMaintenanceWebapiClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
CompanyServiceMaintenanceWebapiClient.prototype = {};
CompanyServiceMaintenanceWebapiClient.prototype.reqCompanyServiceMaintenance = function(platformArgs, filter, pageOption) {
  this.send_reqCompanyServiceMaintenance(platformArgs, filter, pageOption);
  return this.recv_reqCompanyServiceMaintenance();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_reqCompanyServiceMaintenance = function(platformArgs, filter, pageOption) {
  this.output.writeMessageBegin('reqCompanyServiceMaintenance', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_args();
  args.platformArgs = platformArgs;
  args.filter = filter;
  args.pageOption = pageOption;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_reqCompanyServiceMaintenance = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_reqCompanyServiceMaintenance_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCompanyServiceMaintenance failed: unknown result';
};
CompanyServiceMaintenanceWebapiClient.prototype.addUpgradeSchedule = function(platformArgs, upgradeSchedule) {
  this.send_addUpgradeSchedule(platformArgs, upgradeSchedule);
  this.recv_addUpgradeSchedule();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_addUpgradeSchedule = function(platformArgs, upgradeSchedule) {
  this.output.writeMessageBegin('addUpgradeSchedule', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_addUpgradeSchedule_args();
  args.platformArgs = platformArgs;
  args.upgradeSchedule = upgradeSchedule;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_addUpgradeSchedule = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_addUpgradeSchedule_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
CompanyServiceMaintenanceWebapiClient.prototype.addRollbackSchedule = function(platformArgs, rollbackSchedule) {
  this.send_addRollbackSchedule(platformArgs, rollbackSchedule);
  this.recv_addRollbackSchedule();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_addRollbackSchedule = function(platformArgs, rollbackSchedule) {
  this.output.writeMessageBegin('addRollbackSchedule', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_addRollbackSchedule_args();
  args.platformArgs = platformArgs;
  args.rollbackSchedule = rollbackSchedule;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_addRollbackSchedule = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_addRollbackSchedule_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
CompanyServiceMaintenanceWebapiClient.prototype.reqMaintenanceScheduleDetail = function(platformArgs, filter) {
  this.send_reqMaintenanceScheduleDetail(platformArgs, filter);
  return this.recv_reqMaintenanceScheduleDetail();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_reqMaintenanceScheduleDetail = function(platformArgs, filter) {
  this.output.writeMessageBegin('reqMaintenanceScheduleDetail', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_args();
  args.platformArgs = platformArgs;
  args.filter = filter;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_reqMaintenanceScheduleDetail = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_reqMaintenanceScheduleDetail_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqMaintenanceScheduleDetail failed: unknown result';
};
CompanyServiceMaintenanceWebapiClient.prototype.cancelMaintenanceSchedule = function(platformArgs, companyIds) {
  this.send_cancelMaintenanceSchedule(platformArgs, companyIds);
  this.recv_cancelMaintenanceSchedule();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_cancelMaintenanceSchedule = function(platformArgs, companyIds) {
  this.output.writeMessageBegin('cancelMaintenanceSchedule', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_args();
  args.platformArgs = platformArgs;
  args.companyIds = companyIds;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_cancelMaintenanceSchedule = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_cancelMaintenanceSchedule_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
CompanyServiceMaintenanceWebapiClient.prototype.reqMaintenanceHistory = function(platformArgs, companyId) {
  this.send_reqMaintenanceHistory(platformArgs, companyId);
  return this.recv_reqMaintenanceHistory();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_reqMaintenanceHistory = function(platformArgs, companyId) {
  this.output.writeMessageBegin('reqMaintenanceHistory', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_args();
  args.platformArgs = platformArgs;
  args.companyId = companyId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_reqMaintenanceHistory = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_reqMaintenanceHistory_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqMaintenanceHistory failed: unknown result';
};
CompanyServiceMaintenanceWebapiClient.prototype.reqCompanyExistVersionTags = function(platformArgs) {
  this.send_reqCompanyExistVersionTags(platformArgs);
  return this.recv_reqCompanyExistVersionTags();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_reqCompanyExistVersionTags = function(platformArgs) {
  this.output.writeMessageBegin('reqCompanyExistVersionTags', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_args();
  args.platformArgs = platformArgs;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_reqCompanyExistVersionTags = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_reqCompanyExistVersionTags_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCompanyExistVersionTags failed: unknown result';
};
CompanyServiceMaintenanceWebapiClient.prototype.reqCompanyServiceDetail = function(platformArgs, companyId) {
  this.send_reqCompanyServiceDetail(platformArgs, companyId);
  return this.recv_reqCompanyServiceDetail();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_reqCompanyServiceDetail = function(platformArgs, companyId) {
  this.output.writeMessageBegin('reqCompanyServiceDetail', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_args();
  args.platformArgs = platformArgs;
  args.companyId = companyId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_reqCompanyServiceDetail = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_reqCompanyServiceDetail_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCompanyServiceDetail failed: unknown result';
};
CompanyServiceMaintenanceWebapiClient.prototype.reqCompanyUpgradeVersion = function(platformArgs, companyIds) {
  this.send_reqCompanyUpgradeVersion(platformArgs, companyIds);
  return this.recv_reqCompanyUpgradeVersion();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_reqCompanyUpgradeVersion = function(platformArgs, companyIds) {
  this.output.writeMessageBegin('reqCompanyUpgradeVersion', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_args();
  args.platformArgs = platformArgs;
  args.companyIds = companyIds;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_reqCompanyUpgradeVersion = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_reqCompanyUpgradeVersion_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCompanyUpgradeVersion failed: unknown result';
};
CompanyServiceMaintenanceWebapiClient.prototype.reqCompanyRollbackVersion = function(platformArgs, companyId) {
  this.send_reqCompanyRollbackVersion(platformArgs, companyId);
  return this.recv_reqCompanyRollbackVersion();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_reqCompanyRollbackVersion = function(platformArgs, companyId) {
  this.output.writeMessageBegin('reqCompanyRollbackVersion', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_args();
  args.platformArgs = platformArgs;
  args.companyId = companyId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_reqCompanyRollbackVersion = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_reqCompanyRollbackVersion_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCompanyRollbackVersion failed: unknown result';
};
CompanyServiceMaintenanceWebapiClient.prototype.initCompanyVersion = function(platformArgs, companyId, versionId) {
  this.send_initCompanyVersion(platformArgs, companyId, versionId);
  this.recv_initCompanyVersion();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_initCompanyVersion = function(platformArgs, companyId, versionId) {
  this.output.writeMessageBegin('initCompanyVersion', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_initCompanyVersion_args();
  args.platformArgs = platformArgs;
  args.companyId = companyId;
  args.versionId = versionId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_initCompanyVersion = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_initCompanyVersion_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
CompanyServiceMaintenanceWebapiClient.prototype.reqServerVersions = function(platformArgs) {
  this.send_reqServerVersions(platformArgs);
  return this.recv_reqServerVersions();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_reqServerVersions = function(platformArgs) {
  this.output.writeMessageBegin('reqServerVersions', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_reqServerVersions_args();
  args.platformArgs = platformArgs;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_reqServerVersions = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_reqServerVersions_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqServerVersions failed: unknown result';
};
CompanyServiceMaintenanceWebapiClient.prototype.updateKeepLatestTag = function(platformArgs, companyId, keepLatest) {
  this.send_updateKeepLatestTag(platformArgs, companyId, keepLatest);
  this.recv_updateKeepLatestTag();
};

CompanyServiceMaintenanceWebapiClient.prototype.send_updateKeepLatestTag = function(platformArgs, companyId, keepLatest) {
  this.output.writeMessageBegin('updateKeepLatestTag', Thrift.MessageType.CALL, this.seqid);
  var args = new CompanyServiceMaintenanceWebapi_updateKeepLatestTag_args();
  args.platformArgs = platformArgs;
  args.companyId = companyId;
  args.keepLatest = keepLatest;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

CompanyServiceMaintenanceWebapiClient.prototype.recv_updateKeepLatestTag = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new CompanyServiceMaintenanceWebapi_updateKeepLatestTag_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
